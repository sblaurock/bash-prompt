#!/bin/bash

#
# bash-prompt
#
# Improved bash prompt with support for Git.
# github.com/sblaurock/bash-prompt
#

# Define colors
COLOR_DEFAULT="\[\e[39m\]"
COLOR_RED="\[\e[31m\]"
COLOR_GREEN="\[\e[32m\]"
COLOR_YELLOW="\[\e[33m\]"
COLOR_BLUE="\[\e[34m\]"
COLOR_MAGENTA="\[\e[35m\]"
COLOR_CYAN="\[\e[36m\]"
COLOR_LIGHT_GRAY="\[\e[37m\]"
COLOR_GRAY="\[\e[90m\]"
COLOR_LIGHT_RED="\[\e[91m\]"
COLOR_LIGHT_GREEN="\[\e[92m\]"
COLOR_LIGHT_YELLOW="\[\e[93m\]"
COLOR_LIGHT_BLUE="\[\e[94m\]"
COLOR_LIGHT_MAGENTA="\[\e[95m\]"
COLOR_LIGHT_CYAN="\[\e[96m\]"
COLOR_WHITE="\[\e[97m\]"

# Options
SHOW_USERNAME=true
SHOW_HOSTNAME=true
	NAME_DIVIDER="@"
	USERNAME_COLOR=$COLOR_LIGHT_MAGENTA
	HOSTNAME_COLOR=$COLOR_LIGHT_MAGENTA
	NAME_DIVIDER_COLOR=$COLOR_LIGHT_MAGENTA
SHOW_CWD=true
	FULL_CWD=false
	CWD_COLOR=$COLOR_MAGENTA
SHOW_GIT=true
	SHOW_GIT_DIRTY=true
		GIT_DIRTY_SYMBOL=" *"
		GIT_DIRTY_COLOR=$COLOR_LIGHT_RED
	GIT_COLOR=$COLOR_RED
SPACER=" > "
	SPACER_COLOR=$COLOR_GRAY
SYMBOL=" $ "
	SYMBOL_COLOR=$COLOR_WHITE

# Return the current Git branch name (or false)
function git_branch() {
	local branch="$(git rev-parse --abbrev-ref HEAD 2> /dev/null)"

	if [ ! -z $branch ]; then
		echo $branch
	fi
}

# Are we in a Git repository?
function on_git() {
	if $(git rev-parse --is-inside-work-tree 2> /dev/null); then
		return 0
	fi

	return 1
}

# Is our Git branch dirty?
function git_dirty() {
	if $(git diff-index --quiet HEAD 2> /dev/null); then
		return 1
	fi

	return 0
}

# Sets bash prompt based on the values defined within options
function set_ps1() {
	local firstItem=true
	local spacer=''

	if $SHOW_USERNAME || $SHOW_HOSTNAME ; then
		$firstItem && spacer='' || spacer=${SPACER_COLOR}${SPACER}${SPACER_COLOR}

		if $SHOW_USERNAME && $SHOW_HOSTNAME ; then
			local divider=${NAME_DIVIDER_COLOR}${NAME_DIVIDER}${COLOR_DEFAULT}
		fi

		if $SHOW_USERNAME ; then
			local username=${USERNAME_COLOR}"\u"${COLOR_DEFAULT}
		fi

		if $SHOW_HOSTNAME ; then
			local hostname=${HOSTNAME_COLOR}"\h"${COLOR_DEFAULT}
		fi

		firstItem=false
		local name=${spacer}${username}${divider}${hostname}
	fi

	if $SHOW_CWD ; then
		$firstItem && spacer='' || spacer=${SPACER_COLOR}${SPACER}${SPACER_COLOR}
		$FULL_CWD && cwdType="\w" || cwdType="\${PWD#\${PWD%/*/*}}"

		firstItem=false
		local cwd=${spacer}${CWD_COLOR}${cwdType}${COLOR_DEFAULT}
	fi

	if $SHOW_GIT ; then
		$firstItem && spacer='' || spacer=${SPACER_COLOR}${SPACER}${SPACER_COLOR}

		if $SHOW_GIT_DIRTY ; then
			local dirty=${GIT_DIRTY_COLOR}${GIT_DIRTY_SYMBOL}${COLOR_DEFAULT}
		fi

		firstItem=false
		local git=${spacer}${GIT_COLOR}"\$(git_branch)"${COLOR_DEFAULT}
	fi

	local symbol=${SYMBOL_COLOR}${SYMBOL}${COLOR_DEFAULT}

	PS1="${name}${cwd}\$(on_git && echo \"\[${git}\]\"\$(git_dirty && echo \"\[${dirty}\]\"))${symbol}"
}

set_ps1
